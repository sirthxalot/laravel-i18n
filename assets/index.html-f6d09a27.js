import{_ as i,r as l,o as c,c as r,a,b as n,d as e,t as p,e as u,f as t}from"./app-c303192f.js";const d={},h=a("h2",{id:"introduction",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),n(" Introduction")],-1),g=a("code",null,"AddLanguageRequest",-1),m={href:"https://laravel.com/docs/10.x/validation#form-request-validation",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Sirthxalot<span class="token punctuation">\\</span>Laravel<span class="token punctuation">\\</span>I18n<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>AddLanguageRequest</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span><span class="token class-name type-declaration">AddLanguageRequest</span> <span class="token variable">$request</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="validation-rules" tabindex="-1"><a class="header-anchor" href="#validation-rules" aria-hidden="true">#</a> Validation Rules</h2><h3 id="locale" tabindex="-1"><a class="header-anchor" href="#locale" aria-hidden="true">#</a> locale</h3><p>A <u>string</u> that determines a valid and non-existing locale, e.g. &quot;en&quot;, &quot;en_US&quot; or &quot;eng_US&quot;.</p><ul><li>required</li><li>min 2 characters</li><li>max 6 characters</li><li>follow ISO-15897 convention</li><li>language must be missing</li></ul><h2 id="replacing-form-request" tabindex="-1"><a class="header-anchor" href="#replacing-form-request" aria-hidden="true">#</a> Replacing Form Request</h2>`,6),k={href:"https://laravel.com/docs/10.x/validation#form-request-validation",target:"_blank",rel:"noopener noreferrer"},f=t(`<p>After creating your form request you can register it within the I18n configuration (<code>config/i18n.php</code>):</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;validation&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;language&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;add&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Sirthxalot<span class="token punctuation">\\</span>Laravel<span class="token punctuation">\\</span>I18n<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Requests<span class="token punctuation">\\</span>AddLanguageRequest</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">Â </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Changing the form request can be dangerous and may lead into problems. Please do not change the form requests if you are not 100% sure what you are doing - stick to our plan. We also may not support you if you are using custom form requests.</p></div>`,3);function b(o,q){const s=l("ExternalLinkIcon");return c(),r("div",null,[h,a("p",null,[n("The "),g,n(),a("a",m,[n("form request"),e(s)]),n(" will be used to validate data before a language will be added. It contains the common validation rules provided by "+p(o.$site.title)+". You can use the form request in any method you want:",1)]),v,a("p",null,[n("You can change the validation rules for new languages by "),a("a",k,[n("creating your own form request"),e(s)]),n(". However, we do not recomend to do this.")]),f,u("                            that's all folks!                            ")])}const y=i(d,[["render",b],["__file","index.html.vue"]]);export{y as default};
