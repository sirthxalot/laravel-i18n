import{_ as a,o as e,c as s,f as n}from"./app-c303192f.js";const i={},t=n(`<h2 id="add-language" tabindex="-1"><a class="header-anchor" href="#add-language" aria-hidden="true">#</a> Add Language</h2><p>Use the <code>i18n:add-language</code> artisan command to create a new language:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan i18n:add-language
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="list-all-languages" tabindex="-1"><a class="header-anchor" href="#list-all-languages" aria-hidden="true">#</a> List All Languages</h2><p>Use the <code>i18n:list-languages</code> artisan command to get a list of all languages:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan i18n:list-languages
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="import-missing-translations" tabindex="-1"><a class="header-anchor" href="#import-missing-translations" aria-hidden="true">#</a> Import Missing Translations</h2><p>Use the <code>i18n:import-missing-translations</code> artisan command to import all missing translations.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan i18n:import-missing-translations
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="list-missing-translations" tabindex="-1"><a class="header-anchor" href="#list-missing-translations" aria-hidden="true">#</a> List Missing Translations</h2><p>Use the <code>i18n:list-missing-translations</code> artisan command to get a list of all missing translations:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan i18n:list-missing-translations
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="set-translation" tabindex="-1"><a class="header-anchor" href="#set-translation" aria-hidden="true">#</a> Set Translation</h2><p>Use the <code>i18n:set-translation</code> artisan command to create or update a translation or even language:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan i18n:set-translation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="synchronize-translation-drivers" tabindex="-1"><a class="header-anchor" href="#synchronize-translation-drivers" aria-hidden="true">#</a> Synchronize Translation Drivers</h2><p>Use the <code>i18n:sync</code> artisan command to synchronize one I18n driver into another:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan i18n:sync
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Synchronizing means that all translations or languages found within one driver will be copied into another driver, regardless if they exist or not. Therefore it uses the set translation method which creates or updates a translation.</p><p>This means that if you already edited a translation you will loose the message if the key is present. To avoid this you should always remove translations you don&#39;t want to update (within the from driver) before syncing (into the target driver).</p></div>`,19),r=[t];function d(l,o){return e(),s("div",null,r)}const h=a(i,[["render",d],["__file","index.html.vue"]]);export{h as default};
