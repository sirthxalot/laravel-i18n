import{_ as t,r as o,o as p,c,a as n,b as s,d as e,e as i,f as l}from"./app-c303192f.js";const r={},u=n("h2",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),s(" Introduction")],-1),d={href:"https://laravel.com/docs/10.x/session",target:"_blank",rel:"noopener noreferrer"},k={href:"https://laravel.com/docs/10.x/middleware#registering-middleware",target:"_blank",rel:"noopener noreferrer"},m=l(`<h2 id="register-middleware" tabindex="-1"><a class="header-anchor" href="#register-middleware" aria-hidden="true">#</a> Register Middleware</h2><p>Register the middleware within the <code>App\\Providers\\RouteServiceProvider</code> service provider class:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * The application&#39;s route middleware groups.
 *
 * <span class="token keyword">@var</span> <span class="token class-name"><span class="token keyword">array</span></span>
 */</span>
<span class="token keyword">protected</span> <span class="token variable">$middlewareGroups</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;web&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Middleware<span class="token punctuation">\\</span>EncryptCookies</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Cookie<span class="token punctuation">\\</span>Middleware<span class="token punctuation">\\</span>AddQueuedCookiesToResponse</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Session<span class="token punctuation">\\</span>Middleware<span class="token punctuation">\\</span>StartSession</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>View<span class="token punctuation">\\</span>Middleware<span class="token punctuation">\\</span>ShareErrorsFromSession</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Middleware<span class="token punctuation">\\</span>VerifyCsrfToken</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Illuminate<span class="token punctuation">\\</span>Routing<span class="token punctuation">\\</span>Middleware<span class="token punctuation">\\</span>SubstituteBindings</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Sirthxalot<span class="token punctuation">\\</span>Laravel<span class="token punctuation">\\</span>I18n<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Middleware<span class="token punctuation">\\</span>SetLocaleFromSession</span><span class="token operator">::</span><span class="token keyword">class</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">Â </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h2><p>You can now store a locale within a session. The session key is defined within the <code>i18n.locale_sk</code> configuration. Its default value is <code>i18n_locale</code>:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;i18n_locale&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;de_CH&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The middleware now detects the locale from the session. If the locale is a given language then it uses the value for the application&#39;s locale:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">app</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// de_CH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8);function v(h,b){const a=o("ExternalLinkIcon");return p(),c("div",null,[u,n("p",null,[s("You can change the application's locale depending on a user's "),n("a",d,[s("session"),e(a)]),s(" value. All you need to do is to "),n("a",k,[s("register our middleware"),e(a)]),s(", into your routes or HTTP kernel. Here is an example of how to register the middleware for web routes:")]),m,i("                            that's all folks!                            ")])}const f=t(r,[["render",v],["__file","index.html.vue"]]);export{f as default};
