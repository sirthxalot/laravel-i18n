import{_ as r,r as o,o as l,c as d,a,b as e,t as p,d as n,e as c,f as i}from"./app-c303192f.js";const h={},u=a("h2",{id:"step-01-use-composer",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#step-01-use-composer","aria-hidden":"true"},"#"),e(" Step-01: Use Composer")],-1),g={href:"https://getcomposer.org/",target:"_blank",rel:"noopener noreferrer"},b=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require sirthxalot/laravel-i18n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You are now basically ready to go if you would like to run I18n on the default file driver.</p><h2 id="step-02-publish-file-groups" tabindex="-1"><a class="header-anchor" href="#step-02-publish-file-groups" aria-hidden="true">#</a> Step-02: Publish File Groups</h2><p>Use the <code>i18n-config</code> tag to publish the <code>config/i18n.php</code> config file:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan vendor:publish <span class="token parameter variable">--tag</span><span class="token operator">=</span>i18n-config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Use the <code>i18n-lang</code> tag to publish the translation (lang) files:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan vendor:publish <span class="token parameter variable">--tag</span><span class="token operator">=</span>i18n-lang
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Use the <code>i18n-migration</code> tag to publish the I18n database migrations:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan vendor:publish <span class="token parameter variable">--tag</span><span class="token operator">=</span>i18n-migration
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="step-03-database-setup" tabindex="-1"><a class="header-anchor" href="#step-03-database-setup" aria-hidden="true">#</a> Step-03: Database Setup</h2><p>Change the <code>i18n.driver</code> driver configuration to <strong>database</strong>, within the <code>config/i18n.php</code> file:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;database&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12),v={href:"https://laravel.com/docs/10.x/migrations",target:"_blank",rel:"noopener noreferrer"},m=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="step-04-synchronize-drivers" tabindex="-1"><a class="header-anchor" href="#step-04-synchronize-drivers" aria-hidden="true">#</a> Step-04: Synchronize Drivers</h2><p>If you would like to import all existing file translations into the database you can do that. Synchronization means that one driver (file) will copy everything into another (database). This means existing translations will be overwritten.</p><p>Let&#39;s begin by publishing all translation files from the application itself:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>php artisan lang<span class="token punctuation">:</span>publish
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Also publish all vendor languages or create file translations you may want to import.</p><p>Run the <code>i18n:sync</code> artisan command when you are ready to sync the drivers:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan i18n:sync <span class="token function">file</span> database
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Confirm the question with <code>yes</code>.</p>`,9);function f(t,_){const s=o("ExternalLinkIcon");return l(),d("div",null,[u,a("p",null,[e("You may install "+p(t.$site.title)+" into your application using the ",1),a("a",g,[e("Composer"),n(s)]),e(" package manager:")]),b,a("p",null,[e("Run the "),a("a",v,[e("database migration"),n(s)]),e(" to create the language and translation tables:")]),m,c("                            that's all folks!                            ")])}const y=r(h,[["render",f],["__file","index.html.vue"]]);export{y as default};
